1.どのようにリファクタリングを行ったかを詳細に記述してください

ペアの課題python3のコードに行いました。関数の定義の前に２行のブランクを入れることと、「＋」の前後に半角スペースを入れるようにとコードレヴューに表示されたので、その内容に従ってリファクタリングをしました。

2.どのようにプルリクエストを行ったかを詳細に記述してください
ローカルリポジトリにプルリクエスト用のブランチを作成し、このブランチに切り替える。
①対象のGitHubリポジトリをForkボタンをクリックし、自分のアカウントにリポジトリをForkする。
②リモートリポジトリのページの右上の緑色のボタン「Clone or download」をクリック
「Clone with SSH」が表示されていることを確認し、URLをコピーし他の開発者に送りcloneしてもらう
コマンドは
 ```
 $ git clone ---SSHのURL-----.git
 ```
④他の開発者が修正を加えたあと、add,コミット、作成したブランチをpush（プッシュ）してもらう
⑥他の開発者がPull RequestをGitHub上で作成
リモートのリポジトリのページに行く。
 「Code」タブ→「[Compare & pull request]」をクリック→「Pull Request」作成ページにて変更内容などを書いて「Create pull request」ボタンをクリック。
⑧レビュー担当者がリモートマージする

3.公開認証鍵について素人にも分かるように説明してください。
暗号や認証の技術を利用して、安全にリモートコンピュータと通信するためのとりきめであるSSHの認証方式に「パスワード認証方式」と「公開鍵認証方式」の二つがあります。そのうちの一つが「公開鍵認証方式」です。
公開鍵認証方式は公開鍵と秘密鍵の二つの鍵（キーペア）を使用した接続システムです。
おもに公開鍵はクライアントに、秘密鍵はサーバーの方で使用します。
詳細は次の通りです。
まずサーバAに一対の公開鍵と秘密鍵をインストールしたとします。そして通信をしたいクライアントが現れたら、そのクライアントに公開鍵を配布します。
そのクライアントは通信内容を公開鍵で暗号化をした上でサーバAへ通信します。
サーバAは全てのクライアントの通信を、一つの秘密鍵で復号化して中身を確認することができます。一方、サーバA以外の全世界の機器は秘密鍵が無いので通信は復号できません。
公開鍵ではクライアント自身の通信を復号化できないので、公開鍵は盗聴されても影響はありません。
一方で、サーバAは通信を送るときに、その通信内容のハッシュ値と秘密鍵で暗号化したものを元のデータと一緒に送ります。データを受けとったクライアントは、まずデータからハッシュ値を計算します。また一緒に送信されてきた暗号化されたハッシュ値を送信者の公開されている公開鍵を使って復号化します。この二つのハッシュ値が一致すれば、それはサーバAからの通信であり、データは途中で改ざんされていないことが確認できます。
このように公開鍵認証を用いることで、データの暗号復号だけでなくデータの改ざんのチェックやなりすましの確認などに使うことが可能です。



4.その他、今回の授業で学んだことを記述してください。
 ・プルリクエストを実際に実践してみて、一回では完全に覚えられていないが、複数でソフトを開発するときの仕事の一部を知ることができた。
 ・リモートリポジトリ内で直接ファイルの変更・更新ができることを初めて知りました。
